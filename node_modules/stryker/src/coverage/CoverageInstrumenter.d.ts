/// <reference types="node" />
import { InputFile } from 'stryker-api/core';
import { StatementMap } from 'stryker-api/test_runner';
import { TestFramework } from 'stryker-api/test_framework';
export interface StatementMapDictionary {
    [file: string]: StatementMap;
}
/**
 * Represents the CoverageInstrumenter
 * Responsible for managing the instrumentation of all files to be mutated.
 * In case of `perTest` coverageAnalysis it will hookin to the test framework to accomplish that.
 */
export default class CoverageInstrumenter {
    private coverageAnalysis;
    private testFramework;
    private coverageInstrumenterStreamPerFile;
    constructor(coverageAnalysis: 'all' | 'off' | 'perTest', testFramework: TestFramework | null);
    instrumenterStreamForFile(file: InputFile): NodeJS.ReadWriteStream;
    hooksForTestRun(): string;
    retrieveStatementMapsPerFile(): StatementMapDictionary;
    private createStreamForFile(coverageVariable, fileName);
}
