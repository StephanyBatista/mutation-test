import { Location, Range } from 'stryker-api/core';
import { TestResult, RunResult } from 'stryker-api/test_runner';
/**
 * Represents a mutation which has been applied to a file.
 */
export default class Mutant {
    mutatorName: string;
    filename: string;
    private originalCode;
    replacement: string;
    location: Location;
    range: Range;
    private _scopedTestIds;
    specsRan: string[];
    private _timeSpentScopedTests;
    readonly scopedTestIds: number[];
    readonly timeSpentScopedTests: number;
    addAllTestResults(runResult: RunResult): void;
    addTestResult(index: number, testResult: TestResult): void;
    /**
     * @param mutatorName - The name of the Mutator which created this mutant.
     * @param filename - The name of the file which was mutated, including the path.
     * @param originalCode - The original content of the file which has not been mutated.
     * @param replacement - The mutated code which will replace a part of the originalCode.
     * @param location - The location of the code to be mutated - line and column based
     * @param range - The location of the code to be mutated - index based
     */
    constructor(mutatorName: string, filename: string, originalCode: string, replacement: string, location: Location, range: Range);
    private isNewLine(index);
    private getMutationLineIndexes();
    readonly originalLines: string;
    readonly mutatedLines: string;
    private readonly mutatedCode;
    /**
     * Saves the mutated code in a mutated file.
     * @function
     */
    save(filename: string): Promise<void>;
    /**
     * Removes the mutated file.
     * @function
     */
    reset(filename: string): Promise<void>;
    toString(): string;
}
