import { InputFile } from 'stryker-api/core';
import { Config } from 'stryker-api/config';
import { RunResult } from 'stryker-api/test_runner';
import { MutantResult } from 'stryker-api/report';
import { TestFramework } from 'stryker-api/test_framework';
import CoverageInstrumenter from './coverage/CoverageInstrumenter';
import Mutant from './Mutant';
import StrictReporter from './reporters/StrictReporter';
export default class SandboxCoordinator {
    private options;
    private files;
    private testFramework;
    private reporter;
    constructor(options: Config, files: InputFile[], testFramework: TestFramework | null, reporter: StrictReporter);
    initialRun(coverageInstrumenter: CoverageInstrumenter): Promise<RunResult>;
    runMutants(mutants: Mutant[]): Promise<MutantResult[]>;
    private createSandboxes();
    private startTestRun(coverageInstrumenter);
    private createDryRunResult();
    private reportMutantTested(mutant, runResult, results);
    private collectFrozenMutantResult(mutant, runResult);
    private reportAllMutantsTested(results);
}
