import { Config } from 'stryker-api/config';
import { RunResult } from 'stryker-api/test_runner';
import { InputFile } from 'stryker-api/core';
import { TestFramework } from 'stryker-api/test_framework';
import Mutant from './Mutant';
import CoverageInstrumenter from './coverage/CoverageInstrumenter';
export default class Sandbox {
    private options;
    private index;
    private files;
    private testFramework;
    private coverageInstrumenter;
    private testRunner;
    private fileMap;
    private workingFolder;
    private testHooksFile;
    constructor(options: Config, index: number, files: InputFile[], testFramework: TestFramework | null, coverageInstrumenter: CoverageInstrumenter | null);
    initialize(): Promise<void>;
    run(timeout: number): Promise<RunResult>;
    dispose(): Promise<void>;
    runMutant(mutant: Mutant): Promise<RunResult>;
    private fillSandbox();
    private copyFile(file);
    private initializeTestRunner();
    private calculateTimeout(mutant);
    private filterTests(mutant);
}
