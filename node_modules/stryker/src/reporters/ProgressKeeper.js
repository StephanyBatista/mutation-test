"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var chalk = require("chalk");
var report_1 = require("stryker-api/report");
var ProgressKeeper = /** @class */ (function () {
    function ProgressKeeper() {
        // progress contains Labels, because on initation of the ProgressBar the width is determined based on the amount of characters of the progressBarContent inclusive ASCII-codes for colors
        this.progress = {
            error: 0,
            survived: 0,
            killed: 0,
            timeout: 0,
            noCoverage: 0,
            testedCount: 0,
            totalCount: 0,
            killedLabel: chalk.green.bold('killed'),
            survivedLabel: chalk.red.bold('survived'),
            noCoverageLabel: chalk.red.bold('no coverage'),
            timeoutLabel: chalk.yellow.bold('timeout'),
            errorLabel: chalk.yellow.bold('error')
        };
    }
    ProgressKeeper.prototype.onAllMutantsMatchedWithTests = function (matchedMutants) {
        this.progress.totalCount = matchedMutants.filter(function (m) { return m.scopedTestIds.length > 0; }).length;
    };
    ProgressKeeper.prototype.onMutantTested = function (result) {
        this.progress.testedCount++;
        switch (result.status) {
            case report_1.MutantStatus.NoCoverage:
                this.progress.testedCount--; // correct for not tested, because no coverage
                this.progress.noCoverage++;
                break;
            case report_1.MutantStatus.Killed:
                this.progress.killed++;
                break;
            case report_1.MutantStatus.Survived:
                this.progress.survived++;
                break;
            case report_1.MutantStatus.TimedOut:
                this.progress.timeout++;
                break;
            case report_1.MutantStatus.Error:
                this.progress.error++;
                break;
        }
    };
    return ProgressKeeper;
}());
exports.default = ProgressKeeper;
//# sourceMappingURL=ProgressKeeper.js.map