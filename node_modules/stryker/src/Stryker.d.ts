import { Config } from 'stryker-api/config';
import { StrykerOptions } from 'stryker-api/core';
import { MutantResult } from 'stryker-api/report';
export default class Stryker {
    config: Config;
    private timer;
    private reporter;
    private testFramework;
    private coverageInstrumenter;
    /**
     * The Stryker mutation tester.
     * @constructor
     * @param {Object} [options] - Optional options.
     */
    constructor(options: StrykerOptions);
    /**
     * Runs mutation testing. This may take a while.
     * @function
     */
    runMutationTest(): Promise<MutantResult[]>;
    private filterOutFailedTests(runResult);
    private loadPlugins();
    private initialTestRun(inputFiles);
    private generateAndRunMutations(inputFiles, initialRunResult, sandboxCoordinator);
    private generateMutants(inputFiles, runResult);
    private wrapUpReporter();
    private applyConfigEditors();
    private freezeConfig();
    private logInitialTestRunSucceeded(tests);
    private logDone();
    private setGlobalLogLevel();
    private logFailedTestsInInitialRun(failedTests);
    private logErrorsInInitialRun(runResult);
    private logTimeoutInitialRun(runResult);
}
